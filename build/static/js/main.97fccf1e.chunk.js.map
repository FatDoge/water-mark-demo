{"version":3,"sources":["components/WaterMark/index.js","utils/request.js","utils/constant.js","service/api.js","components/Charts/index.js","App.js","serviceWorker.js","index.js"],"names":["watermark","_ref","arguments","length","undefined","_ref$container","container","document","body","_ref$width","width","_ref$height","height","_ref$textAlign","textAlign","_ref$textBaseline","textBaseline","_ref$font","font","_ref$fillStyle","fillStyle","_ref$content","content","_ref$rotate","rotate","_ref$zIndex","zIndex","_len","res","Array","_key","args","canvas","createElement","setAttribute","ctx","getContext","Math","PI","fillText","parseFloat","base64Url","toDataURL","__wm","querySelector","watermarkDiv","styleStr","concat","classList","add","style","position","insertBefore","firstChild","MutationObserver","window","WebKitMutationObserver","mo","getAttribute","disconnect","JSON","parse","stringify","observe","attributes","subtree","childList","request","options","rq","Object","objectSpread","json","url","then","catch","err","fetchCurrentUser","Charts","state","currentUser","renderUserData","_callee","_ref2","success","data","regenerator_default","a","wrap","_context","prev","next","sent","results","console","log","_this","setState","uid","stop","this","chart","F2","Chart","id","pixelRatio","devicePixelRatio","source","genre","sold","interval","color","render","react_default","documentElement","clientWidth","clientHeight","Component","App","components_Charts","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97fccf1e.chunk.js","sourcesContent":["/******************************************************************************\r\n *  @文件名: watermark.js\r\n *  @作　者: zjm\r\n *  @日　期: 2018-05-26 11:32:39\r\n *  @修改人: zjm\r\n *  @修  改: 2018-05-26 11:32:39\r\n *  @格  式: 1.module无关的const定义在外部. 2.let const function 属性 reder/return 为顺序.\r\n *  @说  明: 网页水印\r\n ******************************************************************************/\r\n\r\n//#region 定义全局const变量\r\n//#endregion\r\n\r\n// svg 实现 watermark\r\nconst watermark = ({\r\n    // 使用 ES6 的函数默认值方式设置参数的默认取值\r\n    // 具体参见 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Default_parameters\r\n    container = document.body,\r\n    width = '300px',\r\n    height = '200px',\r\n    textAlign = 'left',\r\n    textBaseline = 'bottom',\r\n    font = \"20px Microsoft Yahei\",\r\n    fillStyle = 'rgba(184, 184, 184, 0.4)',\r\n    content = '泰隆银行',\r\n    rotate = '24',\r\n    zIndex = 1000,\r\n} = {}, ...res) => {\r\n    const args = res;\r\n    const canvas = document.createElement('canvas');\r\n\r\n    canvas.setAttribute('width', width);\r\n    canvas.setAttribute('height', height);\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.textAlign = textAlign;\r\n    ctx.textBaseline = textBaseline;\r\n    ctx.font = font;\r\n    ctx.fillStyle = fillStyle;\r\n    ctx.rotate(Math.PI / 180 * rotate);\r\n    ctx.fillText(content, 20, parseFloat(height) / 2);\r\n\r\n    const base64Url = canvas.toDataURL();\r\n    const __wm = document.querySelector('.__wm');\r\n\r\n    const watermarkDiv = __wm || document.createElement(\"div\");\r\n    const styleStr = `\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    z-index:${zIndex};\r\n    pointer-events:none;\r\n    background-repeat:repeat;\r\n    background-image:url('${base64Url}')`;\r\n\r\n    watermarkDiv.setAttribute('style', styleStr);\r\n    watermarkDiv.classList.add('__wm');\r\n\r\n    if (!__wm) {\r\n        container.style.position = 'relative';\r\n        container.insertBefore(watermarkDiv, container.firstChild);\r\n    }\r\n\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    if (MutationObserver) {\r\n        let mo = new MutationObserver(function () {\r\n            const __wm = document.querySelector('.__wm');\r\n            // 只在__wm元素变动才重新调用 __canvasWM\r\n            if ((__wm && __wm.getAttribute('style') !== styleStr) || !__wm) {\r\n                // 避免一直触发\r\n                mo.disconnect();\r\n                mo = null;\r\n                watermark(JSON.parse(JSON.stringify(args)));\r\n            }\r\n        });\r\n\r\n        mo.observe(container, {\r\n            attributes: true,\r\n            subtree: true,\r\n            childList: true,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default watermark;","import { API_URL } from './constant'\r\nimport rq from 'request-promise'\r\n\r\nconst request = options => {\r\n    return rq({\r\n        json: true,\r\n        ...options,\r\n        url: `${API_URL}${options.url}`\r\n    })\r\n    .then( res => res )\r\n    .catch( err => err )\r\n}\r\n\r\nexport default request","export const API_URL = 'https://api.fatdoge.cn/'\r\n","import request from '@/utils/request'\r\n\r\nexport const fetchCurrentUser = () => {\r\n    return request({\r\n        url: 'mock-api/client/5d1d97317ad3a6374ba0d6de'\r\n    }).then( res => res )\r\n}","import React, { Component } from 'react'\r\nimport watermark from '@/components/WaterMark'\r\nimport F2 from '@antv/f2'\r\nimport { fetchCurrentUser } from '@/service/api'\r\n\r\nclass Charts extends Component {\r\n\r\n  state = {\r\n    currentUser: {}\r\n  }\r\n\r\n  renderUserData = async () => {\r\n    const { success, results: { data } } = await fetchCurrentUser();\r\n    if (success) {\r\n      console.log(data)\r\n      this.setState({\r\n        currentUser: data,\r\n      }, () => watermark({\r\n        content: data.uid,\r\n        width: '100',\r\n        height: '80',\r\n        rotate: '17',\r\n      }))\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderUserData()\r\n    const data = [\r\n      { genre: 'Sports', sold: 275 },\r\n      { genre: 'Strategy', sold: 115 },\r\n      { genre: 'Action', sold: 120 },\r\n      { genre: 'Shooter', sold: 350 },\r\n      { genre: 'Other', sold: 150 },\r\n    ];\r\n\r\n    const chart = new F2.Chart({\r\n      id: 'myChart',\r\n      pixelRatio: window.devicePixelRatio // 指定分辨率\r\n    });\r\n    chart.source(data);\r\n    chart.interval().position('genre*sold').color('genre');\r\n    chart.render();\r\n\r\n  }\r\n\r\n  render() {\r\n    return <canvas \r\n      id=\"myChart\" \r\n      width={document.documentElement.clientWidth} \r\n      height={document.documentElement.clientHeight} \r\n    />\r\n  }\r\n}\r\n\r\nexport default Charts","import React from 'react';\nimport Charts from './components/Charts'\n\nfunction App() {\n  return (\n    <Charts />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}